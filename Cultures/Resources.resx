<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_Checksum_Fail" xml:space="preserve">
    <value>Invalid data was received from the panel.</value>
  </data>
  <data name="Error_Download_Retries" xml:space="preserve">
    <value>Download cancelled after too many retries.</value>
  </data>
  <data name="Error_Download_Timeout" xml:space="preserve">
    <value>Download failed because the panel did not respond within the time limit.</value>
  </data>
  <data name="Error_Downloading_Data" xml:space="preserve">
    <value>An error occurred while receiving data from the panel.</value>
  </data>
  <data name="Error_Serial_Port" xml:space="preserve">
    <value>Error opening the serial port.</value>
  </data>
  <data name="Error_Upload_Retries" xml:space="preserve">
    <value>Upload cancelled after too many retries.</value>
  </data>
  <data name="Error_Upload_Timeout" xml:space="preserve">
    <value>Upload failed because the panel did not respond within the time limit.</value>
  </data>
  <data name="Option_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Error_Uploading_Data" xml:space="preserve">
    <value>An error occurred while sending data to the panel.</value>
  </data>
  <data name="Comms_Connected_Writeable" xml:space="preserve">
    <value>Connected for read/write</value>
  </data>
  <data name="Comms_Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="Comms_Listening" xml:space="preserve">
    <value>Listening for logging data</value>
  </data>
  <data name="Comms_Connected_ReadOnly" xml:space="preserve">
    <value>Connected - read-only</value>
  </data>
  <data name="Comms_Firmware_Not_Supported" xml:space="preserve">
    <value>The panel's firmware version is not supported by this Programming Tool.</value>
  </data>
  <data name="File_Save_As" xml:space="preserve">
    <value>Save As...</value>
  </data>
  <data name="Comms_x_Download_Complete" xml:space="preserve">
    <value>{0}: download complete.</value>
  </data>
  <data name="Comms_x_Upload_Complete" xml:space="preserve">
    <value>{0}: upload complete.</value>
  </data>
  <data name="PrintQueueStatus_Busy" xml:space="preserve">
    <value>Busy</value>
  </data>
  <data name="PrintQueueStatus_DoorOpen" xml:space="preserve">
    <value>Door open</value>
  </data>
  <data name="PrintQueueStatus_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="PrintQueueStatus_Initialising" xml:space="preserve">
    <value>Initialising</value>
  </data>
  <data name="PrintQueueStatus_IOActive" xml:space="preserve">
    <value>Receiving data</value>
  </data>
  <data name="PrintQueueStatus_ManualFeed" xml:space="preserve">
    <value>Waiting for manual feed</value>
  </data>
  <data name="PrintQueueStatus_None" xml:space="preserve">
    <value>Status is not specified</value>
  </data>
  <data name="PrintQueueStatus_NotAvailable" xml:space="preserve">
    <value>Status information is unavailable</value>
  </data>
  <data name="PrintQueueStatus_NoToner" xml:space="preserve">
    <value>Out of toner</value>
  </data>
  <data name="PrintQueueStatus_Offline" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="PrintQueueStatus_OutOfMemory" xml:space="preserve">
    <value>Out of memory</value>
  </data>
  <data name="PrintQueueStatus_OutputBinFull" xml:space="preserve">
    <value>Output bin is full</value>
  </data>
  <data name="PrintQueueStatus_PagePunt" xml:space="preserve">
    <value>Unable to print current page</value>
  </data>
  <data name="PrintQueueStatus_PaperJam" xml:space="preserve">
    <value>Paper jam</value>
  </data>
  <data name="PrintQueueStatus_PaperOut" xml:space="preserve">
    <value>Out of paper</value>
  </data>
  <data name="PrintQueueStatus_PaperProblem" xml:space="preserve">
    <value>Paper problem</value>
  </data>
  <data name="PrintQueueStatus_Paused" xml:space="preserve">
    <value>Print queue paused</value>
  </data>
  <data name="PrintQueueStatus_PendingDeletion" xml:space="preserve">
    <value>Deleting print job</value>
  </data>
  <data name="PrintQueueStatus_PowerSave" xml:space="preserve">
    <value>Power save mode</value>
  </data>
  <data name="PrintQueueStatus_Printing" xml:space="preserve">
    <value>Printing</value>
  </data>
  <data name="PrintQueueStatus_Processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="PrintQueueStatus_Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="PrintQueueStatus_ServerUnknown" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="PrintQueueStatus_TonerLow" xml:space="preserve">
    <value>Toner low</value>
  </data>
  <data name="PrintQueueStatus_UserIntervention" xml:space="preserve">
    <value>Error: requires user action</value>
  </data>
  <data name="PrintQueueStatus_Waiting" xml:space="preserve">
    <value>Waiting for print job</value>
  </data>
  <data name="PrintQueueStatus_WarmingUp" xml:space="preserve">
    <value>Warming up</value>
  </data>
</root>